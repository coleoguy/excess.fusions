library(devtools)
install_github("coleoguy/chromePlus")
library(chromePlus)
?constrainMkn
tree <- force.ultrametric(read.nexus("../data/trees/cut.tree.nex"))
#### LOAD PACKAGES ####
library(phytools)
library(chromePlus)
library(diversitree)
tree <- force.ultrametric(read.nexus("../data/trees/cut.tree.nex"))
library(evobiR)
evobiR::scaleTreeRates()
dat <- as.data.frame(matrix(data=NA,
ncol=4,
nrow=225))
View(dat)
#give column names
colnames(dat) <- c("day",
"ADI",
"individual",
"Group")
#give column names
colnames(dat) <- c("day",
"ADI",
"individual",
"group")
View(dat)
#fill day, group columns
dat[,c(1,4)] <- cbind(c(1:15),
c(rep(1,75),
rep(2,75),
rep(3,75)))
#### PLOT STUFF FOR KIRSTEN ####
#### GENERATE DATA ####
dat <- as.data.frame(matrix(data=NA,
ncol=4,
nrow=225))
#give column names
colnames(dat) <- c("day",
"ADI",
"individual",
"group")
#fill day, group columns
dat[,c(1,4)] <- cbind(c(1:15),
c(rep("Bottom",75),
rep("Middle",75),
rep("Top",75)))
index <- 1
rnorm(1)
rnorm(10)
sample(1:100,1)/100
sample(1:100,1)/100
sample(1:100,1)/100
sample(1:100,1)/100
sample(1:100,1)/100
sample(1:100,1)/100
if(dat[index,4] == "Bottom"){
dat[index:index+74,c(2)] <- cbind(c(sample(1:100,1)/100,
rep(NA,7),
sample(1:100,7),
sample(1:100,60)))
}
if(dat[index,4] == "Bottom"){
dat[index:index+74,c(2)] <- c(sample(1:100,1)/100,
rep(NA,7),
sample(1:100,7),
sample(1:100,60))
}
c(sample(1:100,1)/100,
rep(NA,7),
sample(1:100,7),
sample(1:100,60))
c(sample(1:100,1)/100,
rep(NA,7),
sample(1:100,7)/100,
sample(1:100,60)/100)
dat[index:index+74,2]
index:index+74
index+74
index:index+74
index:(index+74)
dat[index:(index+74),2] <- c(sample(1:100,1)/100,
rep(NA,7),
sample(1:100,7)/100,
sample(1:100,60)/100)
as.character(i)
i=1
as.character(i)
#fill individual column
ind <- NA
for(i in 1:5){
ind <- c(ind,rep(as.character(i),15))
}
ind
ind <- c()
for(i in 1:5){
ind <- c(ind,rep(as.character(i),15))
}
ind
dat[,3] <- ind
index=76
c(sample(1:100,31)/100,
rep(NA,7),
sample(1:100,37)/100)
dat[index:(index+74),2]
dat[index:(index+74),2] <- c(sample(1:100,31)/100,
rep(NA,7),
sample(1:100,37)/100)
index = index + 74
dat[index:(index+74),2] <- c(sample(1:100,61)/100,
rep(NA,7),
sample(1:100,7)/100)
index = 76+75
dat[index:(index+74),2] <- c(sample(1:100,61)/100,
rep(NA,7),
sample(1:100,7)/100)
index <- 1
while(index <= nrow(dat)){
if(dat[index,4] == "Bottom"){
dat[index:(index+74),2] <- c(sample(1:100,1)/100,
rep(NA,7),
sample(1:100,67)/100)
} else if (dat[index,4] == "Middle"){
dat[index:(index+74),2] <- c(sample(1:100,31)/100,
rep(NA,7),
sample(1:100,37)/100)
} else {
dat[index:(index+74),2] <- c(sample(1:100,61)/100,
rep(NA,7),
sample(1:100,7)/100)
}
#change index
index = index + 75
}
ggplot(data=dat,mapping = aes(x = day,
y = ADI)) +
geom_line(aes(color = individual)) +
facet_wrap(~group)
#### PLOT STUFF FOR KIRSTEN ####
#### PACKAGES ####
library(ggplot2)
ggplot(data=dat,mapping = aes(x = day,
y = ADI)) +
geom_line(aes(color = individual)) +
facet_wrap(~group)
ggplot(data=dat,mapping = aes(x = day,
y = ADI)) +
geom_line(aes(color = individual))
ggplot(data=dat,mapping = aes(x = day,
y = ADI)) +
geom_line(aes(color = individual)) +
facet_wrap(~dat$group)
dat$day <- as.factor(dat$day)
dat$individual <- as.factor(dat$individual)
ggplot(data=dat,mapping = aes(x = day,
y = ADI)) +
geom_line(aes(color = individual)) +
facet_wrap(~dat$group)
dat$group <- as.factor(dat$group)
ggplot(data=dat,mapping = aes(x = day,
y = ADI)) +
geom_line(aes(color = individual)) +
facet_wrap(~dat$group)
ggplot(data=dat,aes(x = day,
y = ADI)) +
geom_line(aes(color = individual))
ggplot(data=dat,aes(x = day,
y = ADI)) +
geom_line(aes(color = individual)) +
facet_wrap(~dat$group)
dat$day <- as.numeric(dat$day)
ggplot(data=dat,aes(x = day,
y = ADI)) +
geom_line(aes(color = individual)) +
facet_wrap(~dat$group)
#### PLOT STUFF FOR KIRSTEN ####
#### PACKAGES ####
library(ggplot2)
#### GENERATE DATA ####
dat <- as.data.frame(matrix(data=NA,
ncol=4,
nrow=225))
#give column names
colnames(dat) <- c("day",
"ADI",
"individual",
"group")
#fill day, group columns
dat[,c(1,4)] <- cbind(c(1:15),
c(rep("Bottom",75),
rep("Middle",75),
rep("Top",75)))
#fill individual column
ind <- c()
for(i in 1:5){
ind <- c(ind,rep(as.character(i),15))
}
dat[,3] <- ind
#fill individual and ADI columns
index <- 1
while(index <= nrow(dat)){
if(dat[index,4] == "Bottom"){
dat[index:(index+74),2] <- c(sample(1:100,1)/100,
rep(NA,7),
sample(1:100,67)/100)
} else if (dat[index,4] == "Middle"){
dat[index:(index+74),2] <- c(sample(1:100,31)/100,
rep(NA,7),
sample(1:100,37)/100)
} else {
dat[index:(index+74),2] <- c(sample(1:100,61)/100,
rep(NA,7),
sample(1:100,7)/100)
}
#change index
index = index + 75
}
dat$day <- as.numeric(dat$day)
dat$individual <- as.factor(dat$individual)
dat$group <- as.factor(dat$group)
ggplot(data=dat,aes(x = day,
y = ADI)) +
geom_line(aes(color = individual)) +
facet_wrap(~dat$group)
ggplot() +
# geom_line(data=dat,aes(x = Day,
#                      y = ADI,
#                      color=individual)) +
geom_line(data=dat[!is.na(dat$ADI),],aes(x = Day,
y = ADI,
color=individual)) +
geom_line(data=)
ggplot() +
# geom_line(data=dat,aes(x = Day,
#                      y = ADI,
#                      color=individual)) +
geom_line(data=dat[!is.na(dat$ADI),],aes(x = day,
y = ADI,
color=individual)) +
geom_line(data=)
facet_wrap(~dat$group)
ggplot() +
# geom_line(data=dat,aes(x = Day,
#                      y = ADI,
#                      color=individual)) +
geom_line(data=dat[!is.na(dat$ADI),],aes(x = day,
y = ADI,
color=individual)) +
geom_line(data=)+
facet_wrap(~dat$group)
ggplot() +
# geom_line(data=dat,aes(x = Day,
#                      y = ADI,
#                      color=individual)) +
geom_line(data=dat[!is.na(dat$ADI),],aes(x = day,
y = ADI,
color=individual)) +
facet_wrap(~dat$group)
ggplot() +
geom_line(data=dat,aes(x = Day,
y = ADI,
color=individual)) +
geom_line(data=dat[!is.na(dat$ADI),],aes(x = day,
y = ADI,
color=individual)) +
facet_wrap(~dat$group)
ggplot() +
geom_line(data=dat,aes(x = Day,
y = ADI,
color=individual)) +
# geom_line(data=dat[!is.na(dat$ADI),],aes(x = day,
#                                          y = ADI,
#                                          color=individual)) +
facet_wrap(~dat$group)
ggplot() +
geom_line(data=dat,aes(x = day,
y = ADI,
color=individual)) +
# geom_line(data=dat[!is.na(dat$ADI),],aes(x = day,
#                                          y = ADI,
#                                          color=individual)) +
facet_wrap(~dat$group)
ggplot() +
# geom_line(data=dat,aes(x = day,
#                      y = ADI,
#                      color=individual)) +
geom_line(data=dat,aes(x = day,
y = ADI,
color=individual),na.rm = T) +
facet_wrap(~dat$group)
ggplot() +
# geom_line(data=dat,aes(x = day,
#                      y = ADI,
#                      color=individual)) +
geom_path(data=dat,aes(x = day,
y = ADI,
color=individual),na.rm = T) +
facet_wrap(~dat$group)
ggplot() +
# geom_line(data=dat,aes(x = day,
#                      y = ADI,
#                      color=individual)) +
geom_path(data=dat,aes(x = day,
y = ADI,
color=individual),na.rm = F) +
facet_wrap(~dat$group)
na.omit(dat)
dat_narm <- na.omit(dat)
ggplot() +
# geom_line(data=dat,aes(x = day,
#                      y = ADI,
#                      color=individual)) +
geom_path(data=na.omit(dat),aes(x = day,
y = ADI,
color=individual),na.rm = F) +
facet_wrap(~dat$group)
ggplot() +
geom_line(data=dat,aes(x = day,
y = ADI,
color=individual)) +
geom_path(data=na.omit(dat),aes(x = day,
y = ADI,
color=individual),na.rm = F)
ggplot() +
geom_line(data=dat,aes(x = day,
y = ADI,
color=individual)) +
geom_path(data=na.omit(dat),aes(x = day,
y = ADI,
color=individual),na.rm = F) +
facet_wrap(~na.omit(dat)$group)
ggplot() +
geom_line(data=dat,aes(x = day,
y = ADI,
color=individual)) +
geom_path(data=na.omit(dat),aes(x = day,
y = ADI,
color=individual),na.rm = F) +
facet_wrap(~dat$group + na.omit(dat)$group)
dat$group
ggplot() +
# geom_line(data=dat,aes(x = day,
#                      y = ADI,
#                      color=individual)) +
# geom_path(data=na.omit(dat),aes(x = day,
y = ADI,
ggplot() +
# geom_line(data=dat,aes(x = day,
#                      y = ADI,
#                      color=individual)) +
geom_path(data=na.omit(dat),aes(x = day,
y = ADI,
color=individual),na.rm = F) +
facet_wrap(~na.omit(dat)$group)
ggplot() +
# geom_line(data=dat,aes(x = day,
#                      y = ADI,
#                      color=individual)) +
geom_path(data=dat,aes(x = day,
y = ADI,
color=individual),na.rm = T) +
facet_wrap(~na.omit(dat)$group)
ggplot() +
# geom_line(data=dat,aes(x = day,
#                      y = ADI,
#                      color=individual)) +
geom_path(data=dat,aes(x = day,
y = ADI,
color=individual),na.rm = T) +
facet_wrap(~na.omit(dat)$group)
ggplot() +
# geom_line(data=dat,aes(x = day,
#                      y = ADI,
#                      color=individual)) +
geom_path(data=dat,aes(x = day,
y = ADI,
color=individual),na.rm = T) +
facet_wrap(dat$group)
ggplot() +
# geom_line(data=dat,aes(x = day,
#                      y = ADI,
#                      color=individual)) +
geom_path(data=na.omit(dat),aes(x = day,
y = ADI,
color=individual),na.rm = T) +
facet_wrap(na.omit(dat)$group)
View(dat_narm)
rep(dat_narm[1,],4)
rbind(dat_narm,
rep(dat_narm[1,],4))
rbind(dat_narm,dat_narm[1:21,])
dat_narm[1:21,]
dat_narm <- rbind(dat_narm,dat_narm[1:21,])
ggplot() +
geom_line(data=dat,aes(x = day,
y = ADI,
color=individual)) +
geom_path(data=dat_narm,aes(x = day,
y = ADI,
color=individual)) +
facet_wrap(dat$group)
ggplot() +
# geom_line(data=dat,aes(x = day,
#                      y = ADI,
#                      color=individual)) +
geom_path(data=dat_narm,aes(x = day,
y = ADI,
color=individual)) +
facet_wrap(dat_narm$group)
ggplot() +
# geom_line(data=dat,aes(x = day,
#                      y = ADI,
#                      color=individual)) +
geom_path(data=dat_narm,aes(x = day,
y = ADI,
color=individual)) +
facet_wrap(dat_narm$group)
ggplot() +
# geom_line(data=dat,aes(x = day,
#                      y = ADI,
#                      color=individual)) +
geom_line(data=dat_narm,aes(x = day,
y = ADI,
color=individual)) +
facet_wrap(dat_narm$group)
ggplot() +
geom_line(data=dat,aes(x = day,
y = ADI,
color=individual)) +
geom_line(data=dat_narm,aes(x = day,
y = ADI,
color=individual)) +
facet_wrap(dat_narm$group)
ggplot() +
geom_line(data=dat,aes(x = day,
y = ADI,
color=individual)) +
geom_line(data=dat_narm,aes(x = day,
y = ADI,
color=individual)) +
facet_wrap(dat$group)
ggplot() +
geom_line(data=dat,aes(x = day,
y = ADI,
color=individual)) +
# geom_line(data=dat_narm,aes(x = day,
#                                         y = ADI,
#                                         color=individual)) +
facet_wrap(dat$group)
?facet_wrap
ggplot() +
geom_line(data=dat,aes(x = day,
y = ADI,
color=individual)) +
facet_wrap(dat$group)
ggplot() +
geom_line(data=dat,aes(x = day,
y = ADI,
color=individual)) +
facet_wrap(dat$group)+
geom_line(data=dat_narm,aes(x = day,
y = ADI,
color=individual))+
facet_wrap(dat_narm$group)
ggplot() +
geom_line(data=dat,aes(x = day,
y = ADI,
color=individual)) +
geom_line(data=dat_narm,aes(x = day,
y = ADI,
color=individual))+
facet_wrap(~dat$group)
#### PLOTTING ####
ggplot() +
geom_line(data=dat,aes(x = day,
y = ADI,
color=individual)) +
geom_line(data=dat_narm,aes(x = day,
y = ADI,
color=individual))+
facet_wrap(~dat$group+dat_narm$group)
ggplot() +
geom_line(data=dat,aes(x = day,
y = ADI,
color=individual)) +
geom_line(data=dat_narm,aes(x = day,
y = ADI,
color=individual))+
facet_wrap(~dat_narm$group)
setwd("~/Documents/My stuff/Blackmon + Rosenthal Lab Stuff/excess.fusions/scripts/mammals")
#### PACKAGES ####
library(phytools)
library(evobiR)
library(coda)
source("../functions.R")
load(file="../../outputs/mammals/hapauto_maps/hists.RData")
plot(hist[[1]])
View(hist)
load(file="../../outputs/mammals/hapauto_maps/hists.summarized.RData")
hapauto.summarized <- hists.summarized
View(hapauto.summarized)
hapauto.summarized$count
hapauto.summarized$times -> mat
View(mat)
cols <- c(viridis(49))
library(viridis)
cols <- c(viridis(49))
names(cols) <- 1:49
cols
plotSimmap(hists.summarized$tree[[i]],col=cols,fsize=0.03,lwd = 0.1)
plotSimmap(hists.summarized$tree[[1]],col=cols,fsize=0.03,lwd = 0.1)
plotSimmap(hists.summarized$tree[[1]],col=cols,fsize=0.03,lwd = 0.1,type="fan")
